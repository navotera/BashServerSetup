- name: Preparing setup
  hosts: localhost
  connection: local
  become: yes
  vars:
    JAIL_CONFIG_URL: "/tmp/BashServerSetup/serverInit/jail.local"
    CORE_FILE_URL: "/tmp/BashServerSetup/core.sh"
    SETUP_PATH: "/tmp/BashServerSetup/"
    IP_ADDRESS: "{{ ansible_default_ipv4.address }}"
  tasks:
    #- name: Change needrestart configuration
    #  lineinfile:
    #    path: /etc/needrestart/needrestart.conf
    #    regexp: '#\$nrconf{restart} = '\''i'\'';'
    #    line: '$nrconf{restart} = '\''a'\'';'

  
    - name: Start MySQL service
      service:
        name: mysql
        state: started


    - name: Get PASSWORD value
      shell: grep '^PASSWORD=' ~/server.config | cut -d'=' -f2
      register: PASSWD
      no_log: true

    - name: Use PASSWORD value in another task
      debug:
        msg: "The retrieved PASSWORD value is {{ PASSWD.stdout }}"

  
    # - name: Create MySQL User
    #   mysql_user:
    #     name: "root_db"
    #     password: "{{ PASSWD.stdout }}"
    #     host: "localhost"

    # - name: Create the root database user with all privileges
    #   shell: sh /tmp/BashServerSetup/playbook/sh/create_root_db_user.sh

    - name: Set NEW_PASSWORD variable 
      shell: grep '^PASSWORD=' /root/server.config | cut -d'=' -f2 
      register: new_password

    - name: Echo NEW_PASSWORD 
      debug: 
      msg: "New password is {{ new_password.stdout }}"

    - name: Connect to MariaDB and create user 
      mysql_user: 
        login_user: root 
        name: root_db 
        host: localhost 
        password: "{{ new_password.stdout }}" 
        priv: "*.*:ALL" 
      state: present

    - name: Echo results 
      debug: 
      msg: "MariaDB root_db password changed to {{ new_password.stdout }} and user created"


    - name: Start webmin
      command: /usr/share/webmin/changepass.pl /etc/webmin root "{{ PASSWD.stdout }}"

    - name: Set up cron jobs
      cron:
        name: "Run /etc/webmin/status/monitor.pl every 5 minutes"
        minute: "*/5"
        job: "/etc/webmin/status/monitor.pl"
        state: present

    - name: Add cron job to stop services
      cron:
        name: "Stop services every 4 hours"
        minute: "0"
        hour: "*/4"
        job: "sudo service pamin stop"
        state: present

    - name: Reboot the server
      command: reboot
      async: 0
      poll: 0
