- name: Finalize
  hosts: localhost
  connection: local
  become: yes
  vars:
    JAIL_CONFIG_URL: "/var/BashServerSetup/serverInit/jail.local"
    CORE_FILE_URL: "/var/BashServerSetup/core.sh"
    SETUP_PATH: "/var/BashServerSetup/"
    IP_ADDRESS: "{{ ansible_default_ipv4.address }}"
  tasks:
    #- name: Change needrestart configuration
    #  lineinfile:
    #    path: /etc/needrestart/needrestart.conf
    #    regexp: '#\$nrconf{restart} = '\''i'\'';'
    #    line: '$nrconf{restart} = '\''a'\'';'

  
    - name: Start MySQL service
      service:
        name: mysql
        state: started


    - name: Get PASSWORD value
      shell: grep '^PASSWORD=' ~/server.config | cut -d'=' -f2
      register: PASSWD
      no_log: true

    - name: Show what is the password for debugging
      debug:
        msg: "The retrieved PASSWORD value is {{ PASSWD.stdout }}"

    #biar bagaimana pakai ansible rules saat bikin new user tidak bisa selalu 'unable to connect'
    - name: Create the root database user with all privileges
      shell: sh {{SETUP_PATH}}/playbook/sh/create_root_db_user.sh

    - name: Start webmin
      command: /usr/share/webmin/changepass.pl /etc/webmin root "{{ PASSWD.stdout }}"

    - name: Set up cron jobs
      cron:
        name: "Run /etc/webmin/status/monitor.pl every 5 minutes"
        minute: "*/5"
        job: "/etc/webmin/status/monitor.pl"
        state: present

    - name: Add cron job to stop services
      cron:
        name: "Stop services every 4 hours"
        minute: "0"
        hour: "*/4"
        job: "sudo service pamin stop"
        state: present

    - name: Add cron job to stop Webmin services
      cron:
        name: "Stop services every 4 hours"
        minute: "0"
        hour: "*/4"
        job: "sudo service webmin stop"
        state: present

    - name: Disable current swap
      command: swapoff /swapfile
      ignore_errors: yes

    - name: Get memory information
      setup:
        filter: ansible_memtotal_mb

    - name: Set swap file size based on memory
      set_fact:
        swap_size_gb: "{{ 2 if ansible_memtotal_mb < 4096 else 6 }}"

    - name: Create a new swap file
      command: fallocate -l {{ swap_size_gb }}G /swapfile

    - name: Display swap file information
      command: ls -lh /swapfile

    - name: Format swap file
      command: mkswap /swapfile

    - name: Enable the new swap file
      command: swapon /swapfile

    - name: Add the swap file to /etc/fstab
      lineinfile:
        path: /etc/fstab
        line: '/swapfile none swap sw 0 0'
        state: present


    - name: Modify PHP configuration for all domains
      command: virtualmin modify-php-ini --all-domains --ini-name {{ item.ini_name }} --ini-value {{ item.ini_value }}
      with_items:
        - { ini_name: "memory_limit", ini_value: "128M" }
        - { ini_name: "upload_max_filesize", ini_value: "500M" }
        - { ini_name: "post_max_size", ini_value: "500M" }


    - name: Change Webmin port
      replace:
        path: /etc/webmin/miniserv.conf
        regexp: "port=10000"
        replace: "port=9191" 

    - name: Update SSHD configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        line: "{{ item }}"
      with_items:
        - "#edited by serverAutomation by navotera :: share-system.com"
        - "ClientAliveInterval 1200"
        - "ClientAliveCountMax 3"
      

    - name: Disable root SSH login with password
      replace:
        path: /etc/ssh/sshd_config
        regexp: "^PermitRootLogin.*"
        replace: "PermitRootLogin prohibit-password"
    

    - name: Get PASSWORD value
      shell: grep '^PASSWORD=' ~/server.config | cut -d'=' -f2
      register: PASSWD
      no_log: true

    - name: Change root password
      user:
        name: root
        password: "{{ PASSWD.stdout | password_hash('sha512') }}"

    - name: Update Virtualmin configuration for new domain creation
      lineinfile:
        path: /etc/webmin/virtual-server/config
        line: "{{ item }}"
      with_items:
        - "home_format=$DOM"
        - "wizard_run=1"

    - name: Download rclone installation script
      get_url:
        url: https://rclone.org/install.sh
        dest: /tmp/install_rclone.sh

    - name: Run rclone installation script
      command: sudo bash /tmp/install_rclone.sh


    - name: Enable start on boot for fail2ban
      service:
        name: fail2ban
        state: started
        enabled: true

    - name: Add ports to firewall
      firewalld:
        zone: public
        permanent: yes
        state: enabled
        port: "{{ item }}/tcp"
      with_items:
        - 9191 #webmin
        - 9292 #pamin
        - 9393 #monitorix
    
    - name: Reload firewalld
      shell: firewall-cmd --reload
